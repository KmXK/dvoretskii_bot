version: '3.8'

services:
  bot:
    build: .
    command: [ "python", "main.py", "--prod" ]
    volumes:
      - bot_logs:/var/log
      - ./db.json:/app/db.json
      - ./data.json:/app/data.json
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DOWNLOAD_PROXY=${DOWNLOAD_PROXY}
      - CLOUDFLARE_BYPASS_PORT=9002
      - TELEGRAM_API_PORT=${TELEGRAM_API_PORT}
      - TRANSLATE_KEY_ID=${TRANSLATE_KEY_ID}
      - TRANSLATE_KEY_SECRET=${TRANSLATE_KEY_SECRET}
      - AI_KEY_ID=${AI_KEY_ID}
      - AI_KEY_SECRET=${AI_KEY_SECRET}
      - AI_MODEL_URI=${AI_MODEL_URI}
      - AI_MODEL_YANDEXGPT_PASHA=${AI_MODEL_YANDEXGPT_PASHA}
      - AI_MODEL_YANDEXGPT_5_PRO=${AI_MODEL_YANDEXGPT_5_PRO}
      - AI_MODEL_GPT_OSS_20B=${AI_MODEL_GPT_OSS_20B}
      - AI_MODEL_LLAMA_70B=${AI_MODEL_LLAMA_70B}
      - DEEPSEEK_KEY=${DEEPSEEK_KEY}
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_API_HOST=http://telegram-api:8081
    depends_on:
      # - telegram-api
      # - cloudflare-bypass
      - fluentbit
    networks:
      - bot
    restart: always
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: app.logs

  # telegram-api:
  #   image: aiogram/telegram-bot-api:latest
  #   environment:
  #     TELEGRAM_HTTP_PORT: 8081
  #     TELEGRAM_LOCAL: ""
  #     TELEGRAM_WORK_DIR: "/data"
  #     TELEGRAM_API_ID: ${TELEGRAM_API_ID}
  #     TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
  #   volumes:
  #     - telegram_data:/data
  #   ports:
  #     - "${TELEGRAM_API_PORT}:8081"
  #   networks:
  #     - bot

  # cloudflare-bypass:
  #   image: ghcr.io/sarperavci/cloudflarebypassforscraping:latest
  #   ports:
  #     - "9002:8000"
  #   networks:
  #     - bot

  config-generator:
    build:
      context: ./fluentbit
      dockerfile: Dockerfile.config_creator
    volumes:
      - ./fluentbit:/templates:ro
      - config-volume:/output
    environment:
      - YC_GROUP_ID=${YC_GROUP_ID}
    entrypoint: ""
    command: >
      sh -c "
        echo 'Generating config files...' &&
        envsubst < /templates/fluentbit.conf > /output/fluent-bit.conf &&
        envsubst < /templates/parsers.conf > /output/parsers.conf &&
        echo 'Config file generated successfully.'
      "

  fluentbit:
    container_name: fluentbit
    image: cr.yandex/yc/fluent-bit-plugin-yandex:v2.1.1-fluent-bit-2.1.7
    ports:
      - 24224:24224
      - 24224:24224/udp
    restart: always
    depends_on:
      config-generator:
        condition: service_completed_successfully
    volumes:
      - config-volume:/fluent-bit/etc:ro

volumes:
  bot_logs:
  telegram_data:
  config-volume:

networks:
  bot:
    driver: bridge
